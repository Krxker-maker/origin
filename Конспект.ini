Конспект

Типы данных 
Простые:
Числа
Строки
bollean


обьєкты:
Масивы 
функции
обьект даты
регулярные выражение
ошибки
string * number = nAn
все данные от полльзвателя какие бы он не писал будет string
alert confirm  prompt через console.log не выведятся - будет ошибка не видит такую переменную 

const category = 'toys';
console.log(`https://someurl/${category}`);

const  user = 'Artur';
alert(`Привет , ${user}`);

let incr = 10,
    decr = 10;

incr++;
decr--;

console.log(incr);
console.log(decr);  
- incr +1
- decr -1


&& - 'и' вернет true если 2 єлемента правдивых

! - антоним тобеж с тру делает фолс и наоборот с фолс тру
|| - 'или' если есть хоть  1 тру он его выведет 
!= - не равен
!== - равен
emy> git init
Initialized empty Git repository in C:/Users/admin/Desktop/myproject/udemy/.git/
PS C:\Users\admin\Desktop\myproject\udemy> git global --local user.name "Artur"
PS C:\Users\admin\Desktop\myproject\udemy>  git global --local user.email example@gmail.com
Protocols 
ftp - передача данных
разница https и ssh - если через htpps регестрация логин пароль то
 ssh ключи какие лежат в специальном приложение и гененруеться там же
// const answers = []
// answers[0] = prompt('Write your name?', '');
// answers[1] = prompt('Write your surename?', '');
// answers[2] = prompt('Write your age?', '');
// document.write(answers);

git add -A
git commit -m "Добавлено новое изменение в коде для управления фильмами"
git push
? - если
: - если не

const num = 50;
       (num === 50 ) ? console.log('Right!') : console.log('Error');

       Если выходит 50 то буедт райт если нет то эрор

       let  result =  '';
const length = 7;
for(let i =1; i< length;i++ ){
    for(let j =0; j < i; j++){
        result +="*";
    }
    result += '\n'
     
}
console.log(result);   - пирамидка 


// Место для первой задачи
function firstTask() {
    // Пишем решение вот тут
    for(let i = 5;i<=10;i++){
        console.log(i);
    }
    
}

// Место для второй задачи
function secondTask() {
    // Пишем решение вот тут
    for(let j = 20;j>13;j--){
    if(j == 13) break;
    console.log(j);
    }
}

// Место для третьей задачи
function thirdTask() {
    // Пишем решение вот тут
    for(let k =2;k<=10;k += 2){
        console.log(k);
    }
    
}

// Место для четвертой задачи

// Цикл, который нужно переписать:

// for (let i = 2; i <= 16; i++) {
//     if (i % 2 === 0) {
//         continue;
//     } else {
//         console.log(i);
//     }
// }
 for (let i = 2; i <= 16; i++) {
     if (i % 2 === 0) {
         continue;
     } else {
         console.log(i);
     }
 }
function fourthTask() {
    // Пишем решение вот тут
    let i = 2;
while (i <= 16) {
    if (i % 2 === 0) {
        i++;
        continue;
    } else {
        console.log(i);
    }
    i++;
}

Первая задача — вывод чисел от 5 до 10 (включительно). Всё верно.

Вторая задача — вывод чисел от 20 до 14 (включительно). Цикл работает правильно.

Третья задача — чётные числа от 2 до 10. Ошибка в увеличении переменной исправлена, теперь код работает корректно.

Четвёртая задача — переписан цикл for на while для вывода нечётных чисел от 2 до 16 (включительно). Цикл правильно проверяет чётность чисел и использует continue для пропуска чётных чисел.

Пятая задача — возвращает массив чисел [5, 6, 7, 8, 9, 10] и выводит его в консоль. Всё верно.


    if(a != null &&  b != null && a != '' && b!= '' && a.length<50){
            
            personalMovieDB.movies[a] = b;
            console.log('Прошел проверку')
        } else{
            console.log('Не прошел проверку');
            i--;
        } 
        console.log(personalMovieDB);
    }
если  юезр нажал кнопку отмена или 



 for(let i = 0; i < 2; i++){
        const a = prompt('Один из последних просмотреных фильмов?',''),
        b =  prompt('Насколько оцените его?','');
        
        if(a != null &&  b != null && a != '' && b!= '' && a.length<50){
            
            personalMovieDB.movies[a] = b;
            console.log('Прошел проверку')
        } else{
            console.log('Не прошел проверку');
            i--;
        } 
        console.log(personalMovieDB);
    }

let i = 0;

while (i < 2) {
    const a = prompt('Один из последних просмотреных фильмов?', ''),
          b = prompt('Насколько оцените его?', '');

    if (a != null && b != null && a != '' && b != '' && a.length < 50) {
        personalMovieDB.movies[a] = b;
        console.log('Прошел проверку');
        i++;
    } else {
        console.log('Не прошел проверку');
    }

    console.log(personalMovieDB);
}
 тоже самое но переписан цикл через вайл


 function showFirstMessage(text){
console.log(text);
}
showFirstMessage('Hello World!');

function calc(a,b){
    return(a + b);
}

console.log(calc(4 , 3));
console.log(calc(5 , 6));
console.log(calc(10 , 6));
после return - ничего не пишется так как его код просто не видит 


const logger = function(){

};

logger(); - function expression
const calc = (a, b) =>  a + b; - cтрелочная функция


const usdCurr = 28;
const eurCurr = 32;
function convert(amount,curr) {
console.log(curr * amount);

}
convert(500, usdCurr);
convert(500, eurCurr); - обменник валют и универсалньая функция 



если функция пустая то она всеравно выведет undefined пример console.log(''); - метод вызывет то будет андерфайнд 


function sayHello(name) {
    return `Привет, ${name}!`;
}

sayHello('Alex');

function returnNeighboringNumbers(num) {
    return [num - 1, num, num + 1];
}

returnNeighboringNumbers(5);

function getMathResult(num, times) {
    if (typeof(times) !== 'number' || times <= 0) {
        return num;
    }

    let str = '';

    for (let i = 1; i <= times; i++) {
        if (i === times) {
            str += `${num * i}`;
            // Тут без черточек в конце
        } else {
            str += `${num * i}---`;
            // Это тоже самое, что и
            // str = str + num * i + "---"
        }
    }

    return str;
}

getMathResult(10, 5);



indexOf(что-то)- ищет на какой позиции єлемент если выводится -1 значит такого нету
.toUpperCase() - cделает капс
.toLowerCase() - cделает все мальнькими

разница между slice i substring - минусовые значение substring не поддерживает будет как 0

substr - (length , count )

const num = 12.2;
console.log(Math.round(num));) - округляет число 

cost test = '12.2px';
console.log(parseInt(test)); - переводит в число тобеж выведеится 12 
console.log(parseFloat(test)) - тоже самое но с рдоб значением тобеж 12.2